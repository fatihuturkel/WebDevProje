@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@{
    var token = Xsrf.GetAndStoreTokens(Context).RequestToken;
}

<style>
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #f8f9fa;
        margin: 0;
        padding: 0;
    }

    h2 {
        color: #495057;
        text-align: center;
        font-size: 24px;
    }

    h3 {
        color: #343a40;
        font-size: 18px;
        margin-top: 20px;
    }

    select, button {
        width: 100%;
        padding: 10px;
        margin-top: 10px;
        border-radius: 4px;
        border: 1px solid #ced4da;
        font-size: 14px;
    }

    button {
        background-color: #007bff;
        color: white;
        border: none;
        cursor: pointer;
        margin-top: 20px;
    }

        button:hover {
            background-color: #0069d9;
        }

    .container {
        width: 60%;
        margin: 20px auto;
        padding: 20px;
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
</style>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>


@{
    ViewData["Title"] = "Randevu";
}

<h2>@ViewData["Title"]</h2>

@{
    var poliklinikler = ViewData["poliklinikler"] as List<Poliklinik>; // Change Poliklinik to your actual model type
    var doktorlar = ViewData["doktorlar"] as List<Doktor>; // Change Doktor to your actual model type
    var doktorCalismaTakvimleri = ViewData["doktorCalismaTakvimleri"] as List<DoktorCalismaTakvimi>; // Change DoktorCalismaTakvimi to your actual model type
    var tarih = TempData["tarih"];
}

@if (poliklinikler != null && doktorlar != null && doktorCalismaTakvimleri != null)
{
    <h3>Poliklinikler</h3>
    <select id="poliklinikSelect">
        @foreach (var poliklinik in poliklinikler)
        {
            <option value="@poliklinik.Id">@poliklinik.Ad</option> <!-- Change Id and Name to the actual properties you want to use -->
        }
    </select>

    <h3>Doktorlar</h3>
    <select id="doktorSelect">
        <!-- The initial list of doctors, no filtering applied -->
        @foreach (var doktor in doktorlar)
        {
            <option data-poliklinikid="@doktor.PoliklinikId" value="@doktor.Id">@doktor.Kisi.Ad</option>
        }
    </select>

    <h3>Randevu Saatleri</h3>
    <select id="saatSelect">
        @foreach (var takvim in doktorCalismaTakvimleri)
        {
            @if (takvim.dokuz_on == 1)
			{
				<option data-doktorid="@takvim.DoktorId" value="dokuz_on">9:00-10:00</option>
			}
            @if (takvim.on_onbir == 1)
            {
                <option data-doktorid="@takvim.DoktorId" value="on_onbir">10:00-11:00</option>
            }
            @if (takvim.onbir_oniki == 1)
			{
                <option data-doktorid="@takvim.DoktorId" value="onbir_oniki">11:00-12:00</option>
			}
            @if (takvim.onuc_ondort == 1)
            {
                <option data-doktorid="@takvim.DoktorId" value="onuc_ondort">13:00-14:00</option>
            }
            @if (takvim.ondort_onbes == 1)
            {
                <option data-doktorid="@takvim.DoktorId" value="ondort_onbes">14:00-15:00</option>
            }
            @if (takvim.onbes_onalti == 1)
            {
                <option data-doktorid="@takvim.DoktorId" value="onbes_onalti">15:00-16:00</option>
            }
            @if (takvim.onalti_onyedi == 1)
            {
                <option data-doktorid="@takvim.DoktorId" value="onalti_onyedi">16:00-17:00</option>
            }
        }
    </select>

    <button id="submitButton">Submit</button>

    <!-- Hidden form to submit the selected data to the controller -->
    <form id="hiddenForm" action="/Randevu/GetRandevu" method="post" style="display: none;">
    <!-- Add input fields to hold the selected values -->
    <input type="hidden" id="selectedPoliklinik" name="selectedPoliklinik" />
    <input type="hidden" id="selectedDoktor" name="selectedDoktor" />
    <input type="hidden" id="selectedSaat" name="selectedSaat" />
    <input type="hidden" id="selectedTarih" name="selectedTarih" value="@tarih" />"
    <!-- Add the Antiforgery token to the form -->
    @Html.AntiForgeryToken()
    </form>

    <script>
        // initiate the slot with blank values
        document.getElementById("poliklinikSelect").value = "";
        document.getElementById("doktorSelect").value = "";
        document.getElementById("saatSelect").value = "";
        // Include the Antiforgery token in your JavaScript
        var antiforgeryToken = '@token';


        // Add event listener to handle poliklinik selection change
        document.getElementById("poliklinikSelect").addEventListener("change", function () {
            var selectedPoliklinikId = this.value;

            // Filter doctors based on the selected poliklinik
            var doktorSelect = document.getElementById("doktorSelect");
            Array.from(doktorSelect.options).forEach(function (option) {
                option.hidden = option.getAttribute("data-poliklinikid") !== selectedPoliklinikId;
            });

            // Clear the doktorSelect slot and saatSelect slot
            document.getElementById("doktorSelect").value = ""; // Clear the selected value
            document.getElementById("saatSelect").value = ""; // Clear the selected value

            // Trigger change event on doktorSelect to update the available time slots
            //doktorSelect.dispatchEvent(new Event('change'));
        });

        // Add event listener to handle doktor selection change
		document.getElementById("doktorSelect").addEventListener("change", function () {
			var selectedDoktorId = this.value;

			// Filter saatler based on the selected doktor 
			var saatSelect = document.getElementById("saatSelect");
			Array.from(saatSelect.options).forEach(function (option) {
				option.hidden = option.getAttribute("data-doktorid") !== selectedDoktorId;
			});

            // Clear the saatSelect slot
            document.getElementById("saatSelect").value = ""; // Clear the selected value

            // Trigger change event on saatSelect to update the available time slots
			//saatSelect.dispatchEvent(new Event('change'));
		});

        
        // add event listener for the submit button
        document.getElementById("submitButton").addEventListener("click", function () {
            // add mesaage to the console
            console.log("Submit button clicked");

			// Retrieve the selected values
			var selectedPoliklinik = document.getElementById("poliklinikSelect").value;
			var selectedDoktor = document.getElementById("doktorSelect").value;
			var selectedSaat = document.getElementById("saatSelect").value;

            // Check if both poliklinik and saat are selected
            if (selectedPoliklinik && selectedDoktor && selectedSaat) {
                // Set the hidden form values
                document.getElementById("selectedPoliklinik").value = selectedPoliklinik;
                document.getElementById("selectedDoktor").value = selectedDoktor;
                document.getElementById("selectedSaat").value = selectedSaat;

                // Submit the form
                document.getElementById("hiddenForm").submit();

                // add message to the console
                console.log("Form submitted");
            } else {
                // Display an alert or message indicating that both selections are required
                alert("Lütfen poliklinik, doktor ve randevu saatini seçiniz.");
            }
		});
    </script>
}
else
{
    <p>No data available.</p>
}
